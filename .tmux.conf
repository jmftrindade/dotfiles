# Set window and pane indexes to start at 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# Use C-a as prefix, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
# C-a passthrough by sending C-a 2 times
bind-key C-a send-prefix

# Vi mode instead of emacs (default)
setw -g mode-keys vi
set -g status-keys vi

set -g history-limit 10000

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# No delay for escape key press
set -sg escape-time 0


###############################
# KEY-BINDINGS
###############################

# mouse behavior
set -g mouse on

# Easy config reload with prefix-R
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

bind-key : command-prompt
bind-key r refresh-client -S \; display-message "client reloaded."
bind-key L clear-history

bind-key | split-window -h -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key H resize-pane -L 5
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key L resize-pane -R 5
bind-key M-h resize-pane -L
bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-l resize-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind-key -n M-h select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind-key -n M-Left select-pane -L
bind-key -n M-Down select-pane -D
bind-key -n M-Up select-pane -U
bind-key -n M-Right select-pane -R
# uncomment below stanza to enable smart pane switching with awareness of vim splits
# bind-key -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
# bind-key -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
# bind-key -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
# bind-key -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
# bind-key -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
# bind-key C-l send-keys 'C-l'

# Shift arrow to switch windows
bind-key -n S-Left  previous-window
bind-key -n S-Right next-window

bind-key C-o rotate-window
bind-key enter next-layout
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v begin-selection
bind-key -T copy-mode-vi y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter copy-pipe "reattach-to-user-namespace pbcopy"


###############################
# WINDOW AND PANE
###############################

set -g default-terminal "screen-256color"

# Active window title colors
#setw -g window-status-current-fg magenta  # black
#setw -g window-status-current-bg white  # default
#setw -g window-status-current-attr bright  # bold

# Pane number display
#set -g display-panes-active-colour colour1
#set -g display-panes-colour colour166
set-window-option -g display-panes-time 1500

# Set pane colors - highlight the active pane
#set -g status-bg black
#set -g status-fg yellow
set -g pane-border-fg colour3
set -g pane-active-border-bg colour3
set -g pane-active-border-fg colour3

# Colorize messages in the command line
set -g message-attr bold
set -g message-bg yellow
set -g message-fg black

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on


###############################
# STATUS BAR
###############################

# Powerline status bar (update path appropriately)
# Depends on powerline install (pip install powerline-status)
run-shell "powerline-daemon -q"
source "/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"
#source "/anaconda/lib/python3.5/site-packages/powerline/bindings/tmux/powerline.conf"

###############################
# MAC AND iTERM COMPATIBILITY
###############################

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Fix to allow mousewheel/trackpad scrolling in tmux 2.1
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# Disable assume-paste-time, so that iTerm2's "Send Hex Codes" feature works
# with tmux 2.1. This is backwards-compatible with earlier versions of tmux,
# AFAICT.
set-option -g assume-paste-time 0

# This needs to be the last line, as it will load local config (e.g., TPM plugins).
source-file ~/.tmux.conf.local
