" jfon: a few more settings not shipped with maximum-awesome
set textwidth=80  " line break after 80 chars
set nocursorline " don't highlight current line

"set autowrite
"set nowritebackup
"set whichwrap+=<,>,h,l,[,] " Wrap arrow keys between lines
autocmd! bufwritepost .vimrc source ~/.vimrc

" keyboard shortcuts
inoremap jj <ESC>

" highlight search
"set hlsearch
"nmap <leader>hl :let @/ = ""<CR>

" enable powerline
set guifont=Monaco\ for\ Powerline:h12
let g:Powerline_symbols = 'fancy'
set encoding=utf-8
set t_Co=256
set fillchars+=stl:\ ,stlnc:\
set term=xterm-256color
set termencoding=utf-8
" for compatibility with powerline:
set laststatus=2 " Always display the statusline in all windows
set showtabline=2 " Always display the tabline, even if there is only one tab
set noshowmode " Hide the default mode text (e.g. -- INSERT -- below the statusline)


" gui settings
if (&t_Co == 256 || has('gui_running'))
  " color scheme
  if ($TERM_PROGRAM == 'iTerm.app')
    colorscheme solarized
  else
    colorscheme desert
  endif
endif

" Disambiguate ,a & ,t from the Align plugin, making them fast again.
"
" This section is here to prevent AlignMaps from adding a bunch of mappings
" that interfere with the very-common ,a and ,t mappings. This will get run
" at every startup to remove the AlignMaps for the *next* vim startup.
"
" If you do want the AlignMaps mappings, remove this section, remove
" ~/.vim/bundle/Align, and re-run rake in maximum-awesome.
function! s:RemoveConflictingAlignMaps()
  if exists("g:loaded_AlignMapsPlugin")
    AlignMapsClean
  endif
endfunction
command! -nargs=0 RemoveConflictingAlignMaps call s:RemoveConflictingAlignMaps()
silent! autocmd VimEnter * RemoveConflictingAlignMaps

" jfon: Configure google-vimcodefmt:
augroup autoformat_settings
  autocmd FileType bzl AutoFormatBuffer buildifier
  autocmd FileType c,cpp,proto,javascript AutoFormatBuffer clang-format
  autocmd FileType dart AutoFormatBuffer dartfmt
  autocmd FileType go AutoFormatBuffer gofmt
  autocmd FileType gn AutoFormatBuffer gn
  autocmd FileType html,css,json AutoFormatBuffer js-beautify
  autocmd FileType java AutoFormatBuffer google-java-format
  autocmd FileType python AutoFormatBuffer yapf
  " Alternative: autocmd FileType python AutoFormatBuffer autopep8
  autocmd FileType python set shiftwidth=2
  autocmd FileType python set tabstop=2
  autocmd FileType python set softtabstop=2
augroup END

" jfon: Run google-vimcodefmt code formatter and fisadev/vim-isort on all lines of the file buffer.
":augroup codeformatter
":    autocmd BufWritePost * FormatCode
":    autocmd BufWritePost * Isort
":augroup END

" jfon: Ctrl+i to sort Python imports (from fisadev/vim-isort Vundle plugin).
"let g:vim_isort_map = '<C-i>'
